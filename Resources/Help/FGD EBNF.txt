Def 					= DefHeader, "=", Name, [":", QuotedString], "[", {PropertyDef} "]";
DefHeader 				= BaseHeader | PointHeader | SolidHeader;
BaseHeader 				= BaseHeaderIdentifier, <BaseHeaderProperty | SizeHeaderProperty | ColorHeaderProperty>
BaseHeaderIdentifier	= "@baseclass";
PointHeader 			= PointHeaderIdentifier, <BaseHeaderProperty | SizeHeaderProperty | ColorHeaderProperty | ModelHeaderProperty>
PointHeaderIdentifier	= "@PointClass";
SolidHeader 			= SolidHeaderIdentifier, <BaseHeaderProperty | ColorHeaderProperty>
SolidHeaderIdentifier	= "@SolidClass";

BaseHeaderProperty 		= "base", "(", BaseClassList, ")";
BaseClassList 			= Name, {",", Name};
SizeHeaderProperty 		= "size", "(", Vec, ",", Vec, ")";
ColorHeaderProperty		= "color", "(", Vec, ")";
ModelHeaderProperty		= "model", "(", ModelDefinition, {ModelDefinition} ")";
ModelDefinition			= QuotedString, Integer, Integer, [Name, "=", (QuotedString | Integer)];

PropertyDef 			= StringPropertyDef | ChoicePropertyDef | FlagsPropertyDef | IntegerPropertyDef | FloatPropertyDef | TargetSourcePropertyDef | TargetDestPropertyDef;

TargetSourcePropertyDef	= Name, "(", "target_source", ")", [":", QuotedString]
TargetDestPropertyDef	= Name, "(", "target_destination", ")", [":", QuotedString]
StringPropertyDef 		= Name, "(", "string", ")", [":", QuotedString];
IntegerPropertyDef		= Name, "(", "integer", ")", [":", QuotedString, [":", Integer]]
FloatPropertyDef		= Name, "(", "float", ")", [":", QuotedString, [":", Decimal]]

ChoicePropertyDef 		= Name, "(", "choices", ")", [":", QuotedString, [":", Integer]], "=", "[", {ChoicePropertyOption}, "]";
ChoicePropertyOption 	= Integer, ":", QuotedString;
FlagsPropertyDef		= Name, "(", "flags", ")", [":", QuotedString], "=", "[", {FlagsPropertyOption}, "]";
FlagsPropertyOption		= Integer, ":", QuotedString, [":", Bool];

Name 					= Word
Vec 					= Decimal, Decimal, Decimal;

QuotedString 			= """, {!"}, """;
Word 					= LetterOrDigit, {LetterOrDigit}

Bool					= "0" | "1";
Integer 				= ["-"], Digit, {Digit};
Decimal 				= ["-"], ((["."], Digit, {Digit}) | (Digit, {Digit}, ".", {Digit}));
LetterOrDigit 			= Letter | Digit;
Digit 					= "0" - "9";
Letter					= "a"-"z" | "A"-"Z" | "_";
